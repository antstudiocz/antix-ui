---
description: Pravidla pro stylov√°n√≠ komponent
globs: 
alwaysApply: false
---
# Antix UI - Stylov√°n√≠ komponent üé®

## Tailwind CSS

Antix UI pou≈æ√≠v√° Tailwind CSS pro stylov√°n√≠ komponent. To poskytuje konzistentn√≠ design syst√©m a v√Ωraznƒõ zjednodu≈°uje v√Ωvoj komponent.

### Z√°kladn√≠ pou≈æit√≠

```tsx
// P≈ô√≠klad komponenty s Tailwind t≈ô√≠dami
export const Card = ({ children, className }) => {
  return (
    <div className={cn(
      "w-full p-4 rounded-lg bg-neutral-00 shadow-sm",
      className
    )}>
      {children}
    </div>
  );
};
```

### Helper funkce cn()

Pro kombinov√°n√≠ Tailwind t≈ô√≠d a podm√≠nƒõn√© aplikov√°n√≠ styl≈Ø pou≈æ√≠vejte funkci `cn()`:

```tsx
import { cn } from "@/lib/utils";

export const Badge = ({ variant = "default", className, ...props }) => {
  return (
    <div
      className={cn(
        "px-2 py-1 text-xs font-medium rounded-full",
        variant === "primary" && "bg-primary-500 text-neutral-00",
        variant === "secondary" && "bg-secondary-300 text-primary-500",
        className
      )}
      {...props}
    />
  );
};
```

## Class Variance Authority (CVA)

Pro komponenty s v√≠ce variantami pou≈æ√≠vejte CVA, kter√Ω poskytuje typovƒõ bezpeƒçn√Ω zp≈Øsob definice variant komponent.

### Z√°kladn√≠ pou≈æit√≠ CVA

```tsx
import { cva, type VariantProps } from "class-variance-authority";

const buttonVariants = cva(
  // Z√°kladn√≠ t≈ô√≠dy, kter√© jsou v≈ædy aplikov√°ny
  "inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2",
  {
    variants: {
      variant: {
        default: "bg-primary-500 text-neutral-00 hover:bg-primary-700",
        secondary: "bg-secondary-300 text-primary-500 hover:bg-secondary-400",
        outline: "border border-input bg-transparent hover:bg-accent",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 px-3",
        lg: "h-11 px-8",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  // Dal≈°√≠ vlastnosti...
}

export const Button = ({ variant, size, className, ...props }: ButtonProps) => {
  return (
    <button
      className={cn(buttonVariants({ variant, size, className }))}
      {...props}
    />
  );
};
```

### Compound Variants

Pro definov√°n√≠ styl≈Ø, kter√© se aplikuj√≠ pouze v urƒçit√Ωch kombinac√≠ch variant:

```tsx
const buttonVariants = cva(
  "z√°kladn√≠-t≈ô√≠dy",
  {
    variants: {
      variant: { solid: "", outlined: "" },
      color: { primary: "", danger: "" },
    },
    compoundVariants: [
      // Styles aplikovan√© pouze kdy≈æ variant="solid" a color="danger"
      {
        variant: "solid",
        color: "danger",
        className: "bg-red-500 text-white hover:bg-red-700",
      },
      // Dal≈°√≠ compound varianty...
    ],
  }
);
```

## CSS promƒõnn√© a Design System

### Syst√©m CSS promƒõnn√Ωch

1. **Glob√°ln√≠ promƒõnn√©**
   - Um√≠stƒõn√≠: `src/styles/foundations/*.css`
   - Kategorie promƒõnn√Ωch:
     - Barvy: `colors.css`
     - Typografie: `typography.css`
     - Mezery a okraje: `spacing.css`
     - Fonty: `fonts.css`

2. **Komponentov√© promƒõnn√©**
   - Pou≈æ√≠vejte CSS promƒõnn√© pro hodnoty, kter√© jsou specifick√© pro komponentu
   - Definujte je v glob√°ln√≠ch stylech:
     ```css
     /* src/styles/index.css nebo src/styles/components/button.css */
     :root {
       --button-border-radius: 8px;
       --button-font-size: 14px;
       --product-card-width: 280px;
       --product-card-height: 420px;
       --product-card-image-height: 180px;
     }
     ```

## Konvence pojmenov√°n√≠

1. **Tailwind t≈ô√≠dy v komponent√°ch**
   - Pou≈æ√≠vejte v√Ωhradnƒõ Tailwind t≈ô√≠dy
   - Pro slo≈æitƒõj≈°√≠ komponenty rozdƒõlte t≈ô√≠dy do logick√Ωch skupin:
     ```tsx
     <div className={cn(
       // Layout
       "flex flex-col items-center",
       // Rozmƒõry
       "w-full max-w-md",
       // Vizu√°ln√≠ styl
       "bg-neutral-00 rounded-lg shadow-sm",
       // Spacing
       "p-4 gap-2",
       // P≈ôedan√© t≈ô√≠dy
       className
     )}>
     ```

2. **Sd√≠len√© styly**
   - Pro opakuj√≠c√≠ se kombinace t≈ô√≠d vytvo≈ôte utility:
     ```tsx
     // src/lib/utils.ts
     export const buttonStyles = {
       base: "rounded-md transition-colors",
       primary: "bg-primary-500 text-white hover:bg-primary-700",
       secondary: "bg-neutral-100 text-primary-800 hover:bg-neutral-200",
     };
     
     // V komponentƒõ
     <button className={cn(buttonStyles.base, buttonStyles.primary)}>
       Tlaƒç√≠tko
     </button>
     ```

## Responzivn√≠ design

1. **Breakpointy**
   - Pou≈æ√≠vejte standardn√≠ Tailwind breakpointy:
     - `sm`: 640px a v√Ω≈°e
     - `md`: 768px a v√Ω≈°e
     - `lg`: 1024px a v√Ω≈°e
     - `xl`: 1280px a v√Ω≈°e
     - `2xl`: 1536px a v√Ω≈°e

2. **Responzivn√≠ t≈ô√≠dy**
   - Pou≈æ√≠vejte Tailwind prefix pro r≈Øzn√© breakpointy:
     ```tsx
     <div className="
       w-full        // Mobile first (v√Ωchoz√≠)
       sm:w-1/2      // 640px a v√Ω≈°e
       lg:w-1/3      // 1024px a v√Ω≈°e
     ">
     ```

## Stav a interakce

1. **Stavy komponent**
   - Pou≈æ√≠vejte Tailwind modifik√°tory pro stavy:
     ```tsx
     <button className="
       bg-primary-500                // V√Ωchoz√≠
       hover:bg-primary-700          // P≈ôi najet√≠ my≈°√≠
       focus:ring-2                  // P≈ôi focusu
       active:translate-y-0.5        // P≈ôi stisku
       disabled:opacity-50           // P≈ôi disabled
     ">
       Tlaƒç√≠tko
     </button>
     ```

2. **Animace a p≈ôechody**
   - Pou≈æ√≠vejte Tailwind t≈ô√≠dy pro animace:
     ```tsx
     <div className="
       transition-all           // Aktivuje animace
       duration-300             // Trv√°n√≠ 300ms
       ease-in-out              // Timing funkce
     ">
       Animovan√Ω prvek
     </div>
     ```

## Redukce pohybu

Respektujte u≈æivatelsk√© preference pomoc√≠ Tailwind:

```tsx
<div className="
  motion-safe:transition-opacity motion-safe:duration-300
  motion-reduce:transition-none
">
  Obsah s podm√≠nƒõn√Ωmi animacemi
</div>
```

## Integrace s UI knihovnami

P≈ôi pou≈æ√≠v√°n√≠ shadcn/ui nebo jin√Ωch komponent:

1. **√öpravy existuj√≠c√≠ch komponent**
   - Pou≈æ√≠vejte `className` prop pro p≈ôed√°n√≠ vlastn√≠ch t≈ô√≠d
   - Pro struktur√°ln√≠ zmƒõny vytvo≈ôte vlastn√≠ komponentu

2. **Konzistence**
   - Udr≈æujte konzistentn√≠ vzhled nap≈ô√≠ƒç vlastn√≠mi a knihovn√≠mi komponentami
   - Dodr≈æujte stejn√© principy designu